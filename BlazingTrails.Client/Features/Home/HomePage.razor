@page "/"

@inject HttpClient Http

<!-- The PageTitle component is used to change the title of the page in the browser tab -->
<PageTitle>Blazing Trails</PageTitle>

<!-- If _trails is null, the data is still being loaded -->
@if (_trails == null)
{
    <p>Loading trails...</p>
}
else
{
    <!-- If -trails is not null, we have some data display -->
    <div class="grid">
        @foreach (var trail in _trails)
        {
            <div class="card shadow" style="width: 18rem;">
                <img src="@trail.Image" class="card-img-top" alt="@trail.Name">
                <div class="card-body">
                    <h5 class="card-title">@trail.Name</h5>
                    <h6 class="card-subtitle mb-3 text-muted">
                        <span class="oi oi-map-marker"></span>
                        @trail.Location
                    </h6>
                    <div class="d-flex justify-content-between">
                        <span>
                            <span class="oi oi-clock mr-2"></span> 
                            @trail.TimeFormatted
                        </span>
                        <span>
                            <span class="oi oi-infinity mr-2"></span> 
                            @trail.Length km
                        </span>
                    </div>
                </div>
            </div>
           }
    </div>
}

@code {
    // Make the _trails field nullable by using the ? operator
    // to fix .NET 6 nullable references types (NRTs) compiler
    // warnings.
    private IEnumerable<Trail>? _trails;

    protected override async Task OnInitializedAsync()
    {
        // The call is wrapped into try catch statement because when there is non-success code
        // returned from the server, an exception of type HttpRequestException is thrown.
        try
        {
            _trails = await Http.GetFromJsonAsync<IEnumerable<Trail>>("trails/trail-data.json");
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"There was a problem loading trail data: {ex.Message}");
        }
    }
}
