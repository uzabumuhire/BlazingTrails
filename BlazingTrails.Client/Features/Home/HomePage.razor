@page "/"

@inject HttpClient Http

<!-- The PageTitle component is used to change the title of the page in the browser tab -->
<PageTitle>Blazing Trails</PageTitle>

<!-- If _trails is null, the data is still being loaded -->
@if (_trails == null)
{
    <p>Loading trails...</p>
}
else
{
    <!-- If -trails is not null, we have some data display -->
    <div class="grid">
        @foreach (var trail in _trails)
        {
            <TrailCard Trail="trail" />
        }
    </div>
}

@code {
    // Make the _trails field nullable by using the ? operator
    // to fix .NET 6 nullable references types (NRTs) compiler
    // warnings.
    private IEnumerable<Trail>? _trails;

    protected override async Task OnInitializedAsync()
    {
        // The call is wrapped into try catch statement because when there is non-success code
        // returned from the server, an exception of type HttpRequestException is thrown.
        try
        {
            _trails = await Http.GetFromJsonAsync<IEnumerable<Trail>>("trails/trail-data.json");
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"There was a problem loading trail data: {ex.Message}");
        }
    }
}
